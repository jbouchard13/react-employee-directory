{"version":3,"sources":["components/TableRow/index.js","components/TableBody/index.js","utils/API.js","components/Button/index.js","components/pages/Table/index.js","components/Input/index.js","components/pages/Form/index.js","components/NavBarContainer/index.js","components/Container/index.js","App.js","serviceWorker.js","index.js"],"names":["TableRow","react_default","a","createElement","key","this","props","firstName","lastName","jobTitle","React","Component","TableBody","employees","map","employee","components_TableRow","_id","API","axios","get","employeeData","post","Button","className","onClick","handleSort","buttonText","Table","state","sortedEmployees","sortOrder","_this2","then","res","setState","data","getEmployeeData","ascendingFirstNameSorted","sort","b","descendingFirstNameSorted","ascendingLastNameSorted","descendingLastNameSorted","ascendingJobTitleSorted","descendingJobTitleSorted","_this3","components_Button","sortByFirstName","sortByLastName","sortByJob","scope","components_TableBody","Input","value","onChange","type","name","placeholder","Form","handleInputChange","event","_event$target","target","_this","Object","defineProperty","preventDefault","newEmployee","response","alert","message","catch","components_Input","handleSubmit","NavBarContainer","location","useLocation","react_router_dom","to","pathname","Container","components_NavBarContainer","react_router","exact","path","component","App","components_Container","Boolean","window","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.64280ba6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass TableRow extends React.Component {\r\n  render() {\r\n    return (\r\n      <tr key={this.props.key}>\r\n        <td>{this.props.firstName}</td>\r\n        <td>{this.props.lastName}</td>\r\n        <td>{this.props.jobTitle}</td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableRow;\r\n","import React from 'react';\r\nimport TableRow from '../TableRow';\r\n\r\nclass TableBody extends React.Component {\r\n  render() {\r\n    return (\r\n      <tbody>\r\n        {this.props.employees.map((employee) => (\r\n          <TableRow\r\n            firstName={employee.firstName}\r\n            lastName={employee.lastName}\r\n            jobTitle={employee.jobTitle}\r\n            key={employee._id}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import axios from 'axios';\r\n\r\n// file to handle data retrieval from database of employees\r\n\r\nexport default {\r\n  // get all employees\r\n  getEmployeeInfo: () => {\r\n    return axios.get('/api/employees');\r\n  },\r\n  // get employees by job title\r\n  getEmployeeByJobTitle: (jobTitle) => {\r\n    return axios.get(`/api/employees/${jobTitle}`);\r\n  },\r\n  // add new employee\r\n  addNewEmployee: (employeeData) => {\r\n    return axios.post('/api/employees', employeeData);\r\n  },\r\n  // delete employee\r\n  deleteEmployee: (employeeId) => {\r\n    return axios.delete(`/api/employees/${employeeId}`);\r\n  },\r\n};\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <button\r\n      className='btn button-color btn-sm button'\r\n      onClick={props.handleSort}\r\n    >\r\n      {props.buttonText}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport TableBody from '../../TableBody';\r\nimport API from '../../../utils/API';\r\nimport Button from '../../Button';\r\nimport './style.css';\r\n\r\nclass Table extends React.Component {\r\n  // set the state to an array that will receive employee data from db\r\n  state = {\r\n    employees: [],\r\n    sortedEmployees: [],\r\n    sortOrder: 'ascending',\r\n  };\r\n  // get employee data from backend db\r\n  getEmployeeData() {\r\n    API.getEmployeeInfo().then((res) => {\r\n      this.setState({ employees: res.data });\r\n    });\r\n  }\r\n  // retrieve employee data when component mounts\r\n  componentDidMount() {\r\n    this.getEmployeeData();\r\n  }\r\n\r\n  sortByFirstName() {\r\n    // sort in ascending or descending order depending on the setOrder state\r\n    if (this.state.sortOrder === 'ascending') {\r\n      // uses array.sort method to compare state object properties\r\n      let ascendingFirstNameSorted = this.state.employees.sort((a, b) =>\r\n        a.firstName > b.firstName ? 1 : -1\r\n      );\r\n      // set the state to the new first name sorted array\r\n      this.setState({\r\n        employees: ascendingFirstNameSorted,\r\n        sortOrder: 'descending',\r\n      });\r\n    } else if (this.state.sortOrder === 'descending') {\r\n      // uses array.sort method to compare state object properties\r\n      let descendingFirstNameSorted = this.state.employees.sort((a, b) =>\r\n        a.firstName < b.firstName ? 1 : -1\r\n      );\r\n      this.setState({\r\n        employees: descendingFirstNameSorted,\r\n        sortOrder: 'ascending',\r\n      });\r\n    }\r\n  }\r\n\r\n  sortByLastName() {\r\n    if (this.state.sortOrder === 'ascending') {\r\n      let ascendingLastNameSorted = this.state.employees.sort((a, b) =>\r\n        a.lastName > b.lastName ? 1 : -1\r\n      );\r\n      this.setState({\r\n        employees: ascendingLastNameSorted,\r\n        sortOrder: 'descending',\r\n      });\r\n    } else if (this.state.sortOrder === 'descending') {\r\n      let descendingLastNameSorted = this.state.employees.sort((a, b) =>\r\n        a.lastName < b.lastName ? 1 : -1\r\n      );\r\n      this.setState({\r\n        employees: descendingLastNameSorted,\r\n        sortOrder: 'ascending',\r\n      });\r\n    }\r\n  }\r\n\r\n  sortByJob() {\r\n    if (this.state.sortOrder === 'ascending') {\r\n      let ascendingJobTitleSorted = this.state.employees.sort((a, b) =>\r\n        a.jobTitle > b.jobTitle ? 1 : -1\r\n      );\r\n      this.setState({\r\n        employees: ascendingJobTitleSorted,\r\n        sortOrder: 'descending',\r\n      });\r\n    } else if (this.state.sortOrder === 'descending') {\r\n      let descendingJobTitleSorted = this.state.employees.sort((a, b) =>\r\n        a.jobTitle < b.jobTitle ? 1 : -1\r\n      );\r\n      this.setState({\r\n        employees: descendingJobTitleSorted,\r\n        sortOrder: 'ascending',\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Employees</h3>\r\n        <Button\r\n          buttonText='Sort'\r\n          handleSort={() => {\r\n            this.sortByFirstName();\r\n          }}\r\n        />\r\n        <Button\r\n          buttonText='Sort'\r\n          handleSort={() => {\r\n            this.sortByLastName();\r\n          }}\r\n        />\r\n        <Button\r\n          buttonText='Sort'\r\n          handleSort={() => {\r\n            this.sortByJob();\r\n          }}\r\n        />\r\n        <table className='table table-dark table-striped table-bordered employees'>\r\n          <thead>\r\n            <tr>\r\n              <th scope='col'>First Name</th>\r\n              <th scope='col'>Last Name</th>\r\n              <th scope='col'>Job Title</th>\r\n            </tr>\r\n          </thead>\r\n          <TableBody employees={this.state.employees} />\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React from 'react';\r\n\r\nclass Input extends React.Component {\r\n  render() {\r\n    return (\r\n      <input\r\n        value={this.props.value}\r\n        onChange={this.props.onChange}\r\n        type='text'\r\n        name={this.props.name}\r\n        className='form-control'\r\n        placeholder={this.props.placeholder}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport Input from '../../Input';\r\nimport Button from '../../Button';\r\nimport API from '../../../utils/API';\r\n\r\nclass Form extends React.Component {\r\n  state = {\r\n    firstName: '',\r\n    lastName: '',\r\n    jobTitle: '',\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    let newEmployee = this.state;\r\n    API.addNewEmployee(newEmployee)\r\n      .then((response) => {\r\n        alert(response.data.message);\r\n      })\r\n      .catch(() => {\r\n        alert('An error occured, please try again');\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Employee Management</h3>\r\n        <form>\r\n          <div className='form-group'>\r\n            <Input\r\n              onChange={this.handleInputChange}\r\n              value={this.state.firstName}\r\n              name='firstName'\r\n              placeholder='First Name'\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <Input\r\n              onChange={this.handleInputChange}\r\n              value={this.state.lastName}\r\n              name='lastName'\r\n              placeholder='Last Name'\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <Input\r\n              onChange={this.handleInputChange}\r\n              value={this.state.jobTitle}\r\n              name='jobTitle'\r\n              placeholder='Job Title'\r\n            />\r\n          </div>\r\n          <Button\r\n            buttonText='Add Employee'\r\n            handleSort={(event) => {\r\n              this.handleSubmit(event);\r\n            }}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport './style.css';\r\n\r\nfunction NavBarContainer() {\r\n  const location = useLocation();\r\n  return (\r\n    <nav className='navbar navbar-expand nav-color'>\r\n      <span className='navbar-brand'>Employee Directory</span>\r\n      <div className='collapse navbar-collapse'>\r\n        <ul className='navbar-nav'>\r\n          <li className='nav-item'>\r\n            <Link\r\n              to='/'\r\n              className={\r\n                location.pathname === '/'\r\n                  ? 'nav-link link-active'\r\n                  : 'nav-link link'\r\n              }\r\n            >\r\n              Table\r\n            </Link>\r\n          </li>\r\n          <li className='nav-item'>\r\n            <Link\r\n              to='/employee-management'\r\n              className={\r\n                location.pathname === '/employee-management'\r\n                  ? 'nav-link link-active'\r\n                  : 'nav-link link'\r\n              }\r\n            >\r\n              Employee Management\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBarContainer;\r\n","// component for bootstrap container\r\n\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Table from '../pages/Table';\r\nimport Form from '../pages/Form';\r\nimport NavBarContainer from '../NavBarContainer';\r\n\r\nclass Container extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <NavBarContainer />\r\n        <div className='container'>\r\n          <Route exact path='/' component={Table} />\r\n          <Route exact path='/employee-management' component={Form} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Container;\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Container from './components/Container';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Container />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}